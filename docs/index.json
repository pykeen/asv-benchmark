{"project": "pykeen", "project_url": "https://pykeen.github.io/", "show_commit_url": "https://github.com/pykeen/pykeen/commit/", "hash_length": 8, "revision_to_hash": {"1711": "fc72397c592c9ea1b21bfae8c9f23f265f98b06e", "2123": "f459fb48f90506369c26f32545793fd996133e86", "2234": "d3d11573e52b969648d353150e3dffccfa9fdf68", "2376": "43ad80e6a9a148bced2f9470fd2259af3be7894a", "2656": "06a254eeb38856a9332191f78a796fd9913a467f", "2723": "60d7628af4acea19c89f74f59149c72186f30c44", "2942": "ff367c4ef328ee5729bf9785bc01688aa0363364", "4802": "880a193f6bbc293adb813aaf7886e01cd22d6a47", "5209": "2878d03f93fa4759ae2127f60861ba1d80889b7f", "5477": "30a4375eafdebeafeada87343ae704f3173769ae", "7148": "b33d8c3b13fae5ace983d7b52ea4b9afb72c2cba", "7151": "e6bf5068f6a04f5fa2bfbff8657761d9818c0149"}, "revision_to_date": {"1711": 1565684102000, "2123": 1593089879000, "2234": 1593703561000, "2376": 1594407080000, "2656": 1597330291000, "2723": 1598366000000, "2942": 1603281476000, "4802": 1611142981000, "5209": 1613398406000, "5477": 1614873895000, "7148": 1621778490000, "7151": 1621779618000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz"], "machine": ["charlie"], "num_cpu": ["16"], "os": ["Darwin 20.4.0"], "ram": ["17179869184"], "python": ["3.9"], "branch": ["master", "negative-sampling-in-data-loader"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz", "machine": "charlie", "num_cpu": "16", "os": "Darwin 20.4.0", "ram": "17179869184", "python": "3.9", "branch": "negative-sampling-in-data-loader"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz", "machine": "charlie", "num_cpu": "16", "os": "Darwin 20.4.0", "ram": "17179869184", "python": "3.9", "branch": "master"}], "benchmarks": {"interactions.DistMultSuite.time_score_h": {"code": "class DistMultSuite:\n    def time_score_h(self, batch_size, dim, num_entities, num_relations):\n        \"\"\"Time score_h method.\"\"\"\n        self.instance.score_h(all_entities=self.all, r=self.r, t=self.t)\n\n    def setup(self, batch_size, dim, num_entities, num_relations):\n        \"\"\"Prepare.\"\"\"\n        self.instance = DistMultInteraction()\n        self.h = torch.rand(batch_size, dim)\n        self.r = torch.rand(batch_size, dim)\n        self.t = torch.rand(batch_size, dim)\n        self.all = torch.rand(num_entities, dim)", "min_run_count": 2, "name": "interactions.DistMultSuite.time_score_h", "number": 0, "param_names": ["batch_size", "dim", "num_entities", "num_relations"], "params": [["64"], ["64"], ["15000"], ["237"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1d213e8a7c645dbbe8326f731ae1e47dbbea8eff7e1f7a7c87734d5182051289", "warmup_time": -1}, "interactions.DistMultSuite.time_score_hrt": {"code": "class DistMultSuite:\n    def time_score_hrt(self, batch_size, dim, num_entities, num_relations):\n        \"\"\"Time score_hrt method.\"\"\"\n        self.instance.score_hrt(h=self.h, r=self.r, t=self.t)\n\n    def setup(self, batch_size, dim, num_entities, num_relations):\n        \"\"\"Prepare.\"\"\"\n        self.instance = DistMultInteraction()\n        self.h = torch.rand(batch_size, dim)\n        self.r = torch.rand(batch_size, dim)\n        self.t = torch.rand(batch_size, dim)\n        self.all = torch.rand(num_entities, dim)", "min_run_count": 2, "name": "interactions.DistMultSuite.time_score_hrt", "number": 0, "param_names": ["batch_size", "dim", "num_entities", "num_relations"], "params": [["64"], ["64"], ["15000"], ["237"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cc67a717948a7eae0da84c135c7e1574ff9a18c305e99d8ef73043f33c10dd48", "warmup_time": -1}, "interactions.DistMultSuite.time_score_t": {"code": "class DistMultSuite:\n    def time_score_t(self, batch_size, dim, num_entities, num_relations):\n        \"\"\"Time score_t method.\"\"\"\n        self.instance.score_t(h=self.h, r=self.r, all_entities=self.all)\n\n    def setup(self, batch_size, dim, num_entities, num_relations):\n        \"\"\"Prepare.\"\"\"\n        self.instance = DistMultInteraction()\n        self.h = torch.rand(batch_size, dim)\n        self.r = torch.rand(batch_size, dim)\n        self.t = torch.rand(batch_size, dim)\n        self.all = torch.rand(num_entities, dim)", "min_run_count": 2, "name": "interactions.DistMultSuite.time_score_t", "number": 0, "param_names": ["batch_size", "dim", "num_entities", "num_relations"], "params": [["64"], ["64"], ["15000"], ["237"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cb5d256c57cc37b880970e2357ff68e73bac6c829327084bbc3a092058a3fd35", "warmup_time": -1}, "training.SLCWATrainingSuite.time_train": {"code": "class SLCWATrainingSuite:\n    def time_train(self, dataset: str, filtered: bool, ratio: int, workers: bool):\n        \"\"\"Time training.\"\"\"\n        self.trainer.train(\n            triples_factory=self.dataset.training,\n            num_epochs=self.num_epochs,\n            use_tqdm=False,\n            num_workers=cpu_count() - 1 if workers else 0,\n        )\n\n    def setup(self, dataset: str, filtered: bool, ratio: int, workers: bool):\n        \"\"\"Prepare.\"\"\"\n        self.device = resolve_device(\"cpu\")\n        self.dataset = get_dataset(dataset=dataset)\n        self.loss = MarginRankingLoss()\n        self.model = DistMult(\n            triples_factory=self.dataset.training,\n            preferred_device=self.device,\n            embedding_dim=self.embedding_dim,\n            loss=self.loss,\n            random_seed=random.randint(0, 2 ** 32 - 1),  # so there's no warning\n        )\n        self.optimizer = Adam(self.model.parameters())\n        negative_sampler = BasicNegativeSampler(\n            triples_factory=self.dataset.training,\n            num_negs_per_pos=ratio,\n            filtered=filtered,\n        )\n        self.trainer = SLCWATrainingLoop(\n            model=self.model,\n            optimizer=self.optimizer,\n            triples_factory=self.dataset.training,\n            negative_sampler=negative_sampler,\n        )", "min_run_count": 2, "name": "training.SLCWATrainingSuite.time_train", "number": 0, "param_names": ["dataset", "filtered", "ratio", "workers"], "params": [["'countries'", "'nations'", "'wn18rr'", "'wn18'"], ["False", "True"], ["10"], ["False", "True"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1845fb4a23a82d642580ddb250184219f441a1c5006ef70447e44fdc0b8a989b", "warmup_time": -1}}, "machines": {"charlie": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz", "machine": "charlie", "num_cpu": "16", "os": "Darwin 20.4.0", "ram": "17179869184", "version": 1}}, "tags": {"v0.0.26": 1711, "v1.0.0": 2123, "v1.0.1": 2234, "v1.0.2": 2376, "v1.0.3": 2656, "v1.0.4": 2723, "v1.0.5": 2942, "v1.1.0": 4802, "v1.3.0": 5209, "v1.4.0": 5477}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}